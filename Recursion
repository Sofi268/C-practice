//Ejemplo de diferentes funciones utilizando recursion sobre un arreglo de enteros

#include <iostream>

using namespace std;

void printArray(int v[], int n); //Imprime todos los enteros del arreglo
int addition(int v[], int n); //Suma todos los elementos 
int biggerNumber(int v[], int n); //Determina el mayor numero del arreglo
int multiplication(int a, int indx);  //Multiplica dos enteros

int main(){
    int v[6] = {17,2,83,4,96,8}; //Arreglo ejemplo
    int indx = (sizeof(v)/sizeof(*v))-1; //Cantidad de indices del arreglo
    int add = addition(v, indx);
    int bigger = biggerNumber(v,indx);
    int multip = multiplication(4,8);

    cout<<"ImpresiÃ³n del arreglo: "<<endl;
    printArray(v, indx);
    cout<<"La addition de los enteros del arreglo es: "<<add<<endl;
    cout<<"El mayor numero del arreglo es: "<<bigger<<endl;
    cout<<"La multiplicacion de ambos numeros es: "<<multip<<endl;

}

void printArray(int v[], int n){
    if(n==0) {
        cout<<v[n]<<endl;
        return;
    }
    cout<<v[n]<<endl;
 printArray(v,n-1);
}

int addition(int v[], int n){
    if(n==0) return v[n];
    return v[n] + addition(v,n-1);
}

int biggerNumber(int v[],int n){ 
    if(n==0) return v[n];    
    int posibmax = biggerNumber(v,n-1);
    return posibmax>v[n] ? posibmax : v[n];
}

int multiplication(int a,int indx){
    if(a==1) return indx;
    return indx + multiplication(a-1,indx);
}
